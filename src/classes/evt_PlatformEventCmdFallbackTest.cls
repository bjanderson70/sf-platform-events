/**
 * Copyright (c) 2016-2018, Bill Anderson.  All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 *   * Redistributions of source code must retain the above copyright
 *     notice, this list of conditions and the following disclaimer.
 *
 *   * Redistributions in binary form must reproduce the above copyright
 *     notice, this list of conditions and the following disclaimer in
 *     the documentation and/or other materials provided with the
 *     distribution.
 *
 *   * Neither the name of Bill Anderson nor the names of its
 *     contributors may be used to endorse or promote products derived
 *     from this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 *
 * @author Bill Anderson
 * @description Test the Creates default Fallback Metadata; when not found
 * @group Test Layer
 */
@isTest
private class evt_PlatformEventCmdFallbackTest {
	@isTest
	static void testgetFallbackMetadata() {
		// assign
		string name = 'pe_test__e';

		// act
		List<evt_Platform_Event_Binding__mdt> mdt = evt_PlatformEventCmdFallback.getFallbackMetadata(name);

		// assert
		system.assertEquals(true, mdt.size() > 0);
		system.assertEquals(true, mdt[0].DeveloperName == name);
		system.assertEquals(true, mdt[0].Environment__c == evt_PlatformEvtUtilities.TEST_ENVIRONMENT);

	}
	@isTest
	static void testgetFallbackMetadataWithEnvironment() {
		// assign
		string name = 'pe_test__e';

		// act
		List<evt_Platform_Event_Binding__mdt> mdt = evt_PlatformEventCmdFallback.getFallbackMetadata(name, evt_PlatformEvtUtilities.PROD_ENVIRONMENT);

		// assert
		system.assertEquals(true, mdt.size() > 0);
		system.assertEquals(true, mdt[0].DeveloperName == name);
		system.assertEquals(true, mdt[0].Environment__c == evt_PlatformEvtUtilities.PROD_ENVIRONMENT);

	}
} // end of evt_PlatformEventCmdFallbackTest